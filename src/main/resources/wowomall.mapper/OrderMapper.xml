<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmu.wowoto.wowomall.mapper.OrderMapper">

<insert id="addOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="id">
    insert into `oomall_order`(
        user_id, order_sn, status, mobile, message, goods_price, freight_price, coupon_price, integral_price, rebate_price, ship_sn, ship_channel, ship_time, confirm_time, end_time, pay_time, parent_id, address, gmt_create, gmt_modified, is_deleted
    )
    values (
        #{userId}, #{orderSn}, #{statusCode}, #{mobile}, #{message}, #{goodsPrice}, #{freightPrice}, #{couponPrice}, #{integralPrice}, #{rebatePrice}, #{shipSn}, #{shipChannel}, #{shipTime}, #{confirmTime}, #{endTime}, #{payTime}, #{parentId}, #{address}, now(), #{gmtModified}, 0
    )
</insert>

<select id="getOrdersByStatusCode" parameterType="java.util.List" resultType="Order">
    select id,
            user_id,
            order_sn,
            status as status_code,
            consignee,
            mobile,
            message,
            goods_price,
            freight_price,
            coupon_price,
            rebate_price,
            integral_price,
            ship_sn,
            ship_channel,
            ship_time,
            confirm_time,
            end_time,
            pay_time,
            parent_id,
            address,
            gmt_create,
            gmt_modified,
            is_deleted as be_deleted
    from `oomall_order`
    where user_id = #{userId} and is_deleted = 0
    <if test="statusCode!=-1">
        and status_code = #{statusCode}
    </if>
    limit #{page}, #{limit}
</select>

<select id="getGrouponOrdersById" parameterType="java.util.List" resultType="Integer">
        select COUNT(`oomall_order_item`.id)
        from `oomall_order`,`oomall_order_item`
        where ( pay_time between #{startTime} and #{endTime} ) and
        `oomall_order`.id = `oomall_order_item`.order_id and `oomall_order`.is_deleted = 0
        and `oomall_order`.status = #{statusCode} and `oomall_order_item`.goods_id = #{goodId}
</select>

<select id="getOrderByOrderId" parameterType="Integer" resultType="Order">
    select id,
           user_id,
           order_sn,
           status as status_code,
           consignee,
           mobile,
           message,
           goods_price,
           freight_price,
           coupon_price,
           rebate_price,
           integral_price,
           ship_sn,
           ship_channel,
           ship_time,
           confirm_time,
           end_time,
           pay_time,
           parent_id,
           address,
           gmt_create,
           gmt_modified,
           is_deleted as be_deleted
    from `oomall_order`
    where is_deleted = 0 and id = #{orderId}
</select>

<update id="updateOrderSelective" parameterType="Order">
    update `oomall_order`
    <set>
        <if test="userId != null">
            user_id = #{userId},
        </if>
        <if test="orderSn != null">
            order_sn = #{orderSn},
        </if>
        <if test="statusCode != null">
            status = #{statusCode},
        </if>
        <if test="consignee != null">
            consignee = #{consignee},
        </if>
        <if test="mobile != null">
            mobile = #{mobile},
        </if>
        <if test="message != null">
            message= #{message},
        </if>
        <if test="goodsPrice != null">
            goods_price = #{goodsPrice},
        </if>
        <if test="freightPrice != null">
            freight_price = #{freightPrice},
        </if>
        <if test="couponPrice != null">
            coupon_price = #{couponPrice},
        </if>
        <if test="integralPrice != null">
            integral_price = #{integralPrice},
        </if>
        <if test="rebatePrice != null">
            rebate_price = #{rebatePrice},
        </if>
        <if test="shipSn != null">
            ship_sn = #{shipSn},
        </if>
        <if test="shipChannel != null">
            ship_channel = #{shipChannel},
        </if>
        <if test="shipTime != null">
            ship_time = #{shipTime},
        </if>
        <if test="confirmTime != null">
            confirm_time = #{confirmTime},
        </if>
        <if test="endTime != null">
            end_time = #{endTime},
        </if>
        <if test="payTime != null">
            pay_time = #{payTime},
        </if>
        <if test="parentId != null">
            parent_id = #{parentId},
        </if>
        <if test="address != null">
            address = #{address},
        </if>
        <if test="gmtCreate != null">
            gmt_create = #{gmtCreate},
        </if>
        <if test="gmtModified != null">
            gmt_modified = now(),
        </if>
        <if test="beDeleted != null">
            is_deleted = #{beDeleted},
        </if>
    </set>
    where id = #{id}
</update>

    <select id="getOrdersByStatusCodesAndOrderSn" parameterType="java.util.List" resultType="Order">
        select id,
        user_id,
        order_sn,
        status as status_code,
        consignee,
        mobile,
        message,
        goods_price,
        freight_price,
        coupon_price,
        rebate_price,
        integral_price,
        ship_sn,
        ship_channel,
        ship_time,
        confirm_time,
        end_time,
        pay_time,
        parent_id,
        address,
        gmt_create,
        gmt_modified,
        is_deleted as be_deleted
        from `oomall_order`
        where  is_deleted = 0
        <if test="userId>-1">
             and user_id = #{userId}
        </if>
        <if test="orderStatusArray!=null and orderStatusArray.size()>0">
            and status_code in
            <foreach close=")" collection="orderStatusArray" item="listItem" open="(" separator=",">
                #{listItem}
            </foreach>
        </if>
        <if test="orderSn!='null'">
            and order_sn=#{orderSn}
        </if>
        limit #{page}, #{limit}
    </select>



</mapper>